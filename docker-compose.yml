services:
  web:
    build:
      context: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             daphne -b 0.0.0.0 -p 8000 config.asgi:application"
    volumes:
      - .:/app
      - ./media:/app/media
      - ./logs.log:/app/logs.log
    env_file:
      - .env
    ports:
      - "8008:8000"
    depends_on:
      - redis
    networks:
      - app_network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./media:/app/media
      - ./static:/app/static
    ports:
      - "8080:80"
    depends_on:
      - web
    networks:
      - app_network

  redis:
    image: redis:6-alpine
    restart: always
    networks:
      - app_network

  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "5002:8081"
    depends_on:
      - redis
    networks:
      - app_network

  celery:
    build:
      context: .
    entrypoint: [ "/bin/sh", "-c", "celery -A config worker -l info" ]
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - web
      - redis
    networks:
      - app_network

  celery-beat:
    build:
      context: .
    entrypoint: [ "/bin/sh", "-c", "celery -A config beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler" ]
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - web
      - redis
    networks:
      - app_network

  flower:
    image: mher/flower:0.9.7
    command: [ 'flower', '--broker=redis://redis:6379', '--port=5555' ]
    ports:
      - "5001:5555"
    environment:
      CELERY_BROKER_URL: ${BROKER_URL}
    depends_on:
      - redis
      - celery
    networks:
      - app_network

  minio:
    container_name: minio
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "${MINIO_USERNAME}"
      MINIO_ROOT_PASSWORD: "${MINIO_PASSWORD}"
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'
    volumes:
      - ./minio_data:/data
    command: server --compat /data --console-address ":9001"
    networks:
      - app_network

volumes:
  minio_data:

networks:
  app_network: